{
  "name": "tubecaster-telegram-bot",
  "version": "0.0.14",
  "timestamp": "2025.02.22 03:44:24 +0300",
  "changed": "2024.12.20, 00:50",
  "description": "Simple video to audio caster telegram bot: @tubecasterbot",
  "main_": "api/index.py",
  "keywords": ["python", "flask", "telegram", "bot", "youtube"],
  "author": "lilliputten <lilliputten@gmail.com>",
  "license": "ISC",
  "devDependencies": {
    "cross-env": "^7.0.3",
    "ngrok": "5.0.0-beta.2",
    "npm-package-user-scripts-list": "^0.1.10",
    "npm-run-all": "^4.1.5",
    "rimraf": "^5.0.5"
  },
  "scripts": {
    "prisma-switch-UNUSED": "echo --Switch database client-- && node prisma-switch.mjs",
    "prisma-generate": "echo --Generate database client-- && poetry run prisma generate",
    "prisma-db-push": "echo --Create database-- && poetry run prisma db push",
    "prisma-db-push-test": "echo --Create test database-- && cross-env DATABASE_URL='file:.data-test.db' poetry run prisma db push",
    "prisma-init": "echo --Initialize prisma environment- && npm-run-all prisma-generate prisma-db-push prisma-db-push-test",
    "prisma-studio": "echo --Run database explorer-- && poetry run prisma studio",
    "prisma-studio-test": "echo --Run database explorer-- && cross-env DATABASE_URL='file:.data-test.db' poetry run prisma studio",
    "ngrok-tunnel": "echo --Start xtunnel for flask and logging server (don't forget to add following address WEBHOOK_HOST to .env.local for webhook or .env.logging-ngrok for logging)-- && xtunnel http 5000",
    "xtunnel": "echo --Start ngrok tunnel for flask and logging server (don't forget to add following ngrok address WEBHOOK_HOST to .env.local)-- && ngrok http 5000",
    "clean": "echo --Clean cache-- && sh .utils/clean-all.sh",
    "pylint": "echo --Run pyright python linter-- && poetry run pyright .",
    "logging-server": "echo --Run local logging server-- && poetry run python logging-server.py",
    "logging-server-syslog": "echo --Run local syslog logging server-- && poetry run python logging-server-syslog.py",
    "pyformat-autopep8": "echo --Run autopep8 python formatter-- && poetry run autopep8 .",
    "pyformat": "echo --Run blue python formatter-- && poetry run blue .",
    "check-all": "echo --Run all formatters, linters and tests-- && npm-run-all pyformat pylint",
    "pytests": "echo --Run python tests with poetry-- && poetry run python -m unittest discover -v -f -t . -s . -p *_test.py",
    "dev": "echo --Run flask dev server via poetry-- && poetry run flask --app api --debug run",
    "export-requirements": "echo --Export requirements from with poetry for vercel-- && poetry export -f requirements.txt --output requirements.txt --without-hashes && echo OK",
    "help": "echo --List all available script commands-- && npm-package-user-scripts-list"
  }
}
